openapi: 3.0.0
info:
  title: Ticket API
  description: Ticket API for Administrator
  version: 1.0.0
  contact:
    name: Mikhail Gaidamaka
    url: https://github.com/mgaidamak
    email: magnoly.nsk@gmail.com
servers:
  - url: 'http://localhost:8080'
paths:
  /bill:
    post:
      summary: Create new bill
      description: Create new bill
      operationId: createBill
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Bill'
      responses:
        200:
          description: Bill has been created
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Bill'
    get:
      summary: Get all bills
      description: Get all bills
      operationId: getBills
      parameters:
      - name: session
        in: query
        description: Search by session
        required: true
        schema:
          type: integer
          format: int32
      - name: page
        in: query
        description: Offset-based strategy pagination
        schema:
          $ref: '#/components/schemas/Page'
      responses:
        200:
          description: List of bills
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bill'
  /bill/{id}:
    get:
      summary: Get bill by ID
      description: Get bill by ID
      operationId: getBillById
      parameters:
      - name: id
        in: path
        description: ID of bill
        required: true
        schema: 
          type: integer
          format: int32
      responses:
        200:
          description: Bill associated with ID
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Bill'
        400:
          description: Invalid id (not int32)
        404:
          description: Bill not found
    patch:
      summary: Update bill by ID
      description: Update bill by ID
      operationId: patchBillById
      parameters:
        - name: id
          in: path
          description: ID of bill
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Bill'
      responses:
        200:
          description: Bill associated with ID
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Bill'
        400:
          description: Invalid id (not int32)
        404:
          description: Bill not found
    delete:
      summary: Delete bill by ID
      description: Delete bill by ID
      operationId: deleteBillById
      parameters:
        - name: id
          in: path
          description: ID of bill
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Previous bill associated with ID
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Bill'
        400:
          description: Invalid id (not int32)
        404:
          description: Bill not found

  /ticket:
    post:
      summary: Create new ticket
      description: Create new ticket
      operationId: createTicket
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Ticket'
      responses:
        200:
          description: Ticket has been created
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Ticket'
    get:
      summary: Get all tickets
      description: Get all tickets
      operationId: getTickets
      parameters:
        - name: session
          in: query
          description: Search by session
          required: false
          schema:
            type: integer
            format: int32
        - name: bill
          in: query
          description: Search by bill
          required: false
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          description: Offset-based strategy pagination
          schema:
            $ref: '#/components/schemas/Ticket'
      responses:
        200:
          description: List of tickets
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ticket'
        400:
          description: No session parameter
    delete:
      summary: Delete ticket by bill
      description: Delete ticket by bill
      operationId: deleteTicketByBill
      parameters:
        - name: bill
          in: query
          description: Search by bill
          required: true
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          description: Offset-based strategy pagination
          schema:
            $ref: '#/components/schemas/Ticket'
      responses:
        200:
          description: Previous tickets associated with ID
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ticket'
        400:
          description: No bill parameter
  /ticket/{id}:
    get:
      summary: Get ticket by ID
      description: Get ticket by ID
      operationId: getTicketById
      parameters:
        - name: id
          in: path
          description: ID of ticket
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Ticket associated with ID
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Ticket'
        400:
          description: Invalid id (not int32)
        404:
          description: Ticket not found
    delete:
      summary: Delete ticket by ID
      description: Delete ticket by ID
      operationId: deleteTicketById
      parameters:
        - name: id
          in: path
          description: ID of ticket
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Previous ticket associated with ID
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ticket'
        400:
          description: Invalid id (not int32)
        404:
          description: Ticket not found

components:
  schemas:
    Bill:
      type: object
      properties:
        id:
          type: integer
          format: int32
        customer:
          type: integer
          format: int32
        session:
          type: integer
          format: int32
        status:
          type: integer
          format: int32
        total:
          type: integer
          format: int32
      required:
        - customer
        - session
        - status
        - total
    Ticket:
      type: object
      properties:
        id:
          type: integer
          format: int32
        bill:
          type: integer
          format: int32
        session:
          type: integer
          format: int32
        seat:
          type: integer
          format: int32
        status:
          type: integer
          format: int32
      required:
        - bill
        - session
        - seat
        - status
    Page:
      type: object
      properties:
        offset:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
