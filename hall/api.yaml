openapi: 3.0.0
info:
  title: Cinema API
  description: Cinema API for Administrator
  version: 1.0.0
  contact:
    name: Mikhail Gaidamaka
    url: https://github.com/mgaidamak
    email: magnoly.nsk@gmail.com
servers:
  - url: 'http://localhost:8080'
paths:
  /cinema:
    post:
      tags:
      - cinema
      summary: Create new cinema
      description: Create new cinema
      operationId: createCinema
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Cinema'
      responses:
        200:
          description: Cinema has been created
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Cinema'
  /cinema/:
    get:
      tags:
      - cinema
      summary: Get all cinemas
      description: Get all cinemas
      operationId: getCinemas
      parameters:
      - name: city
        in: query
        description: Search at city
        required: false
        schema:
          type: string
      - name: sort
        in: query
        description: Fields to sort
        required: false
        schema:
          type: array
          items:
            format: string
      - name: page
        in: query
        description: Offset-based strategy pagination
        schema:
          $ref: '#/components/schemas/Page'
      responses:
        200:
          description: List of cinema
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cinema'
  /cinema/{id}:
    get:
      tags:
      - cinema
      summary: Get cinema by ID
      description: Get cinema by ID
      operationId: getCinemaById
      parameters:
      - name: id
        in: path
        description: ID of cinema
        required: true
        schema: 
          type: integer
          format: int64
      responses:
        200:
          description: Cinema associated with ID
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Cinema'
        400:
          description: Invalid id (not Long)
        404:
          description: Cinema not found
    delete:
      tags:
        - cinema
      summary: Delete cinema by ID
      description: Delete cinema by ID
      operationId: deleteCinemaById
      parameters:
        - name: id
          in: path
          description: ID of cinema
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Previous cinema associated with ID
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cinema'
        400:
          description: Invalid id (not Long)
        404:
          description: Cinema not found

components:
  schemas:
    Cinema:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        city:
          type: string
        address:
          type: string
        timezone:
          type: string
      required:
      - name
      - city
      - address
      - timezone
    Hall:
      type: object
      properties:
        id:
          type: integer
          format: int64
        cinema:
          type: integer
          format: int64
        name:
          type: string
      required:
      - cinema
      - name
    Seat:
      type: object
      properties:
        id:
          type: integer
          format: int64
        hall:
          type: integer
          format: int64
        x:
          type: integer
          format: int32
        y:
          type: integer
          format: int32
        sector:
          type: integer
          format: int32
      required:
      - hall
      - x
      - y
      - sector
    Tariff:
      type: object
      properties:
        id:
          type: integer
          format: int64
        cinema:
          type: integer
          format: int64
        name:
          type: string
        prices:
          type: array
          items:
            $ref: '#/components/schemas/Price'
      required:
      - cinema
      - name
    Price:
      type: object
      properties:
        id:
          type: integer
          format: int64
        tariff:
          type: integer
          format: int64
        name:
          type: string
        sector:
          type: integer
          format: int32
        price:
          type: integer
          format: int32
    Page:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        limit:
          type: integer
          format: int64
