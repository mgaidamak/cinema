openapi: 3.0.0
info:
  title: Public API
  description: Public API for Customer
  version: 1.0.0
  contact:
    name: Mikhail Gaidamaka
    url: https://github.com/mgaidamak
    email: magnoly.nsk@gmail.com
servers:
  - url: 'http://localhost:8080'
paths:
  /public/cinema/:
    get:
      tags:
        - public
      summary: Get all cinemas
      description: Get all cinemas
      operationId: getCinemas
      parameters:
        - name: city
          in: query
          description: Search at city
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: Offset-based strategy pagination
          schema:
            $ref: '#/components/schemas/Page'
      responses:
        200:
          description: List of cinema
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cinema'
  /public/session/:
    get:
      tags:
        - public
      summary: Search sessions
      description: Search sessions at selected cinema
      operationId: searchSession
      parameters:
        - name: cinema
          in: query
          description: Selected cinema
          required: true
          schema:
            type: integer
            format: int32
        - name: date
          in: query
          description: Selected date
          required: true
          schema:
            type: string
            format: date
        - name: page
          in: query
          description: Offset-based strategy pagination
          schema:
            $ref: '#/components/schemas/Page'
      responses:
        200:
          description: List of session
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Session'
  /public/seat/:
    get:
      tags:
        - public
      summary: Search seats
      description: Search sessions at selected cinema
      operationId: searchSession
      parameters:
        - name: session
          in: query
          description: Selected session
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: List of seats
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Seat'
  /public/bill/:
    post:
      tags:
      - public
      summary: Create new bill
      description: Create new bill
      operationId: buyTicket
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Bill'
      responses:
        200:
          description: Cinema has been created
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Bill'
  /public/bill/{id}:
    get:
      tags:
        - public
      summary: Get bill by ID
      description: Get bill by ID
      operationId: getOrderById
      parameters:
        - name: id
          in: path
          description: ID of cinema
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Previous bill associated with ID
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bill'
        400:
          description: Invalid id (not Long)
        404:
          description: Order not found
    delete:
      tags:
        - public
      summary: Delete bill by ID
      description: Delete bill by ID
      operationId: deleteOrderById
      parameters:
        - name: id
          in: path
          description: ID of cinema
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Previous bill associated with ID
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bill'
        400:
          description: Invalid id (not Long)
        404:
          description: Order not found

components:
  schemas:
    Cinema:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        city:
          type: string
        address:
          type: string
        halls:
          type: array
          items:
            $ref: '#/components/schemas/Hall'
    Hall:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
    Session:
      type: object
      properties:
        id:
          type: integer
          format: int32
        film:
          type: string
        hall:
          type: integer
          format: int32
        date:
          type: string
          format: date-time
        price:
          type: integer
          format: int32
    Seat:
      type: object
      properties:
        id:
          type: integer
          format: int32
        x:
          type: integer
          format: int32
        y:
          type: integer
          format: int32
        status:
          description: 0 free, 1 reserved, 2 sold
          type: integer
          format: int32
    Bill:
      type: object
      properties:
        id:
          type: integer
          format: int32
        customer:
          type: integer
          format: int32
        session:
          type: integer
          format: int32
        status:
          description: 0 new, 1 payed, 2 rejected, 3 deleted
          type: integer
          format: int32
        seats:
          type: array
          items:
            $ref: '#/components/schemas/Seat'
    Page:
      type: object
      properties:
        offset:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
